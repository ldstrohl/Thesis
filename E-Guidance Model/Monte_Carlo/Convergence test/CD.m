%---------------------------------------------------------------
function [za]=eqn535(xa,ya)
% limit inputs
if xa > 3
    xa = 3;
elseif xa < 0.2
    xa = 0.2;
end

if ya > 90
    ya = 90;
elseif ya < 0
    ya = 0;
end


%---------------------------------------------------------------
%   TableCurve 3D
%   File Source= d:\sdsu\graduate students and postdoc\lioyd strohl\mrv\cd_supersonic-v2.dat
%   Date= Aug 9, 2017
%   Time= 9:13:52 PM
%   Data Set= CD_supersonic-v2.dat, X , Y , Z 
%   X= 
%   Y= 
%   Z= 
%   Eqn#= 535
%   Eqn= Cosine Series Bivariate Order 6
%   r2=0.995365505767972
%   r2adj=0.9945544692773671
%   StdErr=0.1068547973202964
%   Fstat=1280.685086300801
%   a= 2.601825202253398
%   b= -0.325491229477171
%   c= -1.915758011679423
%   d= -0.3986681258448065
%   e= 0.3102642005960569
%   f= -0.293299137822385
%   g= -0.2223858714336114
%   h= 0.2389643739366244
%   i= -0.07192710122031567
%   j= 0.1331019273567826
%   k= -0.1292322764346005
%   l= 0.1476243090286551
%   m= 0.08522509664646213
%   n= -0.06840905165085417
%   o= -0.03000861756251237
%   p= 0.09021557960998672
%   q= 0.06718383988743998
%   r= 0.09254875894792824
%   s= -0.008662637160463607
%   t= -0.01857387248076365
%   u= 0.006946150208426041
%   v= 0.03148662617060569
%   aa= 0.02960488486247353
%   ab= 0.06339381189209791
%   ac= -0.0062686788760075
%   ad= -0.06257121234241591
%   ae= -0.03008354236554958
%   af= -0.01937592606885998
  [rowx colx]=size(xa);
  if(rowx~=1 & colx~=1)
    error('x must be scalar or 1D array');
    return;
  end
  [rowy coly]=size(ya);
  if(rowy~=1 & coly~=1)
    error('y must be scalar or 1D array');
    return;
  end
  c=[
    2.601825202253398,
    -0.3254912294771710,
    -1.915758011679423,
    -0.3986681258448065,
    0.3102642005960569,
    -0.2932991378223850,
    -0.2223858714336114,
    0.2389643739366244,
    -0.07192710122031567,
    0.1331019273567826,
    -0.1292322764346005,
    0.1476243090286551,
    0.08522509664646213,
    -0.06840905165085417,
    -0.03000861756251237,
    0.09021557960998672,
    0.06718383988743998,
    0.09254875894792824,
    -0.008662637160463607,
    -0.01857387248076365,
    0.006946150208426041,
    0.03148662617060569,
    0.02960488486247353,
    0.06339381189209791,
    -0.006268678876007500,
    -0.06257121234241591,
    -0.03008354236554958,
    -0.01937592606885998,
    ];
  lenx=length(xa);
  leny=length(ya);
  for(j=1:leny)
    for(i=1:lenx)
      x=xa(i);
      y=ya(j);
      z=evalcsi(27,x,y,c,...
        0.2000000000000000,0.8912676813146139,...
        0.000000000000000,31.83098861837907);
       za(i,j)=z;
       end
     end
%--------------------------------------------------------------
function z = evalcsi(order, x, y, p, s0, s1, s2, s3)
%--------------------------------------------------------------
  cx=[];
  cy=[];
  v=[];
  x=(x-s0)/s1;
  y=(y-s2)/s3;
  if(x<0.0)
    x=0.0;
  end
  if(x>3.14159265358979323846)
    x=3.14159265358979323846;
  end
  if(y<0.0)
    y=0.0;
  end
  if(y>3.14159265358979323846)
    y=3.14159265358979323846;
  end
  if (order==5)
    nc=2;
  elseif (order==9)
    nc=3;
  elseif (order==14)
    nc=4;
  elseif (order==20)
    nc=5;
  elseif (order==27)
    nc=6;
  elseif (order==35)
    nc=7;
  elseif (order==44)
    nc=8;
  elseif (order==54)
    nc=9;
  elseif (order==65)
    nc=10;
  else
    return;
  end
  cx(1)=1.0;
  cy(1)=1.0;
  for(j=1:1:nc)
    cx(j+1)=cos(j*x);
    cy(j+1)=cos(j*y);
  end
  iv=1;
  for(j=0:1:nc)
    for(m=j:-1:0)
      v(iv)=cx(m+1)*cy(j-m+1);
      iv=iv+1;
    end
  end
  z=0.0;
  for(j=1:1:order+1)
    z=z+p(j)*v(j);
  end
  return;
